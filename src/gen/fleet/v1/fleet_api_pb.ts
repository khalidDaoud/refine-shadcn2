// Copyright 2024 Smartfiy
//
// The Last Mile  service.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts,import_extension=.js"
// @generated from file fleet/v1/fleet_api.proto (package fleet, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../google/api/annotations_pb.js";
import { file_google_api_client } from "../../google/api/client_pb.js";
import { file_google_api_field_behavior } from "../../google/api/field_behavior_pb.js";
import { file_google_api_resource } from "../../google/api/resource_pb.js";
import { file_google_api_routing } from "../../google/api/routing_pb.js";
import type { Viewport } from "../../google/geo/type/viewport_pb.js";
import { file_google_geo_type_viewport } from "../../google/geo/type/viewport_pb.js";
import type { Vehicle, VehicleSchema } from "./vehicles_pb.js";
import { file_fleet_v1_vehicles } from "./vehicles_pb.js";
import type { FieldMask } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file fleet/v1/fleet_api.proto.
 */
export const file_fleet_v1_fleet_api: GenFile = /*@__PURE__*/
  fileDesc("ChhmbGVldC92MS9mbGVldF9hcGkucHJvdG8SBWZsZWV0ImoKFENyZWF0ZVZlaGljbGVSZXF1ZXN0EhMKBnBhcmVudBgBIAEoCUID4EECEhcKCnZlaGljbGVfaWQYAiABKAlCA+BBAhIkCgd2ZWhpY2xlGAMgASgLMg4uZmxlZXQuVmVoaWNsZUID4EECImYKEUdldFZlaGljbGVSZXF1ZXN0EjgKBG5hbWUYASABKAlCKuBBAvpBJAoiZmxlZXRlbmdpbmUuZ29vZ2xlYXBpcy5jb20vVmVoaWNsZRIXCgp2ZWhpY2xlX2lkGAIgASgJQgPgQQIiyQEKE0xpc3RWZWhpY2xlc1JlcXVlc3QSOgoGcGFyZW50GAEgASgJQirgQQL6QSQSImZsZWV0ZW5naW5lLmdvb2dsZWFwaXMuY29tL1ZlaGljbGUSFgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID4EEBEhMKBmZpbHRlchgEIAEoCUID4EEBEjAKCHZpZXdwb3J0GAUgASgLMhkuZ29vZ2xlLmdlby50eXBlLlZpZXdwb3J0QgPgQQEiqwEKFExpc3RWZWhpY2xlc1Jlc3BvbnNlEjoKBnBhcmVudBgBIAEoCUIq4EEC+kEkEiJmbGVldGVuZ2luZS5nb29nbGVhcGlzLmNvbS9WZWhpY2xlEiUKCHZlaGljbGVzGAIgAygLMg4uZmxlZXQuVmVoaWNsZUID4EEBEhwKD25leHRfcGFnZV90b2tlbhgDIAEoCUID4EEBEhIKCnRvdGFsX3NpemUYBCABKAMixwEKFFVwZGF0ZVZlaGljbGVSZXF1ZXN0EjoKBnBhcmVudBgBIAEoCUIq4EEC+kEkEiJmbGVldGVuZ2luZS5nb29nbGVhcGlzLmNvbS9WZWhpY2xlEhcKCnZlaGljbGVfaWQYAiABKAlCA+BBAhIkCgd2ZWhpY2xlGAMgASgLMg4uZmxlZXQuVmVoaWNsZUID4EECEjQKC3VwZGF0ZV9tYXNrGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFza0ID4EEBMp4GCgxGbGVldFNlcnZpY2UStwEKDUNyZWF0ZVZlaGljbGUSGy5mbGVldC5DcmVhdGVWZWhpY2xlUmVxdWVzdBoOLmZsZWV0LlZlaGljbGUiedpBGXBhcmVudCx2ZWhpY2xlLHZlaGljbGVfaWSC0+STAiw6B3ZlaGljbGUiIS92MS97cGFyZW50PXByb3ZpZGVycy8qfS9WZWhpY2xlc4rT5JMCJRIjCgZwYXJlbnQSGXtwcm92aWRlcl9pZD1wcm92aWRlcnMvKn0SowEKCkdldFZlaGljbGUSGC5mbGVldC5HZXRWZWhpY2xlUmVxdWVzdBoOLmZsZWV0LlZlaGljbGUia9pBEnBhcmVudCwgdmVjaGlsZV9pZILT5JMCJRIjL3YxL3twYXJlbnQ9cHJvdmlkZXJzLyovVmVoaWNsZXMvKn2K0+STAiUSIwoGcGFyZW50Ehl7cHJvdmlkZXJfaWQ9cHJvdmlkZXJzLyp9ErsBCg1VcGRhdGVWZWhpY2xlEhsuZmxlZXQuVXBkYXRlVmVoaWNsZVJlcXVlc3QaDi5mbGVldC5WZWhpY2xlIn3aQRtwYXJlbnQsIHZlaGljbGUsIHZlY2hpbGVfaWSC0+STAi46B3ZlaGljbGUyIy92MS97cGFyZW50PXByb3ZpZGVycy8qL1ZlaGljbGVzLyp9itPkkwIlEiMKBnBhcmVudBIZe3Byb3ZpZGVyX2lkPXByb3ZpZGVycy8qfRKmAQoMTGlzdFZlaGljbGVzEhouZmxlZXQuTGlzdFZlaGljbGVzUmVxdWVzdBobLmZsZWV0Lkxpc3RWZWhpY2xlc1Jlc3BvbnNlIl3aQQZwYXJlbnSC0+STAiMSIS92MS97cGFyZW50PXByb3ZpZGVycy8qfS9WZWhpY2xlc4rT5JMCJRIjCgZwYXJlbnQSGXtwcm92aWRlcl9pZD1wcm92aWRlcnMvKn0aR8pBHmRlbGl2ZXJ5LmxvZ2l0ZWNoLnNtYXJ0Zml5LmNvbdJBI2h0dHBzOi8vLmxvZ2l0ZWNoLnNtYXJ0Zml5LmNvbS9hdXRoQr0BCgljb20uZmxlZXRCDUZsZWV0QXBpUHJvdG9QAVo1Z2l0aHViLmNvbS9zbWFydGZpeS9sb2dpdGVjaC9wa2cvZmxlZXQvYXBpL3YxO2ZsZWV0cGKiAgNGWFiqAgVGbGVldMoCBUZsZWV04gIRRmxlZXRcR1BCTWV0YWRhdGHqAgVGbGVldOpBNQodbG9naXRlY2guc21hcnRmaXkuY29tL1Byb3ZpZGUSFHByb3ZpZGVycy97cHJvdmlkZXJ9YgZwcm90bzM", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_api_routing, file_google_geo_type_viewport, file_fleet_v1_vehicles, file_google_protobuf_field_mask]);

/**
 * The `CreateVehicle` request message.
 *
 * @generated from message fleet.CreateVehicleRequest
 */
export type CreateVehicleRequest = Message<"fleet.CreateVehicleRequest"> & {
  /**
   * Required. Must be in the format `providers/{provider}`. The provider must
   * be the Google Cloud Project ID. For example, `sample-cloud-project`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The  Vehicle ID must be unique and subject to the
   * following restrictions:
   * 
   * * Must be a valid Unicode string.
   * * Limited to a maximum length of 64 characters.
   * * Normalized according to [Unicode Normalization Form C]
   * (http://www.unicode.org/reports/tr15/).
   * * May not contain any of the following ASCII characters: '/', ':', '?',
   * ',', or '#'.
   *
   * @generated from field: string vehicle_id = 2;
   */
  vehicleId: string;

  /**
   * Required. The `Vehicle` entity to create. 
   *
   * @generated from field: fleet.Vehicle vehicle = 3;
   */
  vehicle?: Vehicle;
};

/**
 * Describes the message fleet.CreateVehicleRequest.
 * Use `create(CreateVehicleRequestSchema)` to create a new message.
 */
export const CreateVehicleRequestSchema: GenMessage<CreateVehicleRequest> = /*@__PURE__*/
  messageDesc(file_fleet_v1_fleet_api, 0);

/**
 * The `GetVehicle` request message.
 *
 * @generated from message fleet.GetVehicleRequest
 */
export type GetVehicleRequest = Message<"fleet.GetVehicleRequest"> & {
  /**
   * Required. Must be in the format
   * `providers/{provider}/Vehicles/{vehicle}`.
   * The `provider` must be the  Project ID. For example,
   * `sample-cloud-project`.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Required. The  Vehicle ID must be unique and subject to the
   * following restrictions:
   * 
   * * Must be a valid Unicode string.
   * * Limited to a maximum length of 64 characters.
   * * Normalized according to [Unicode Normalization Form C]
   * (http://www.unicode.org/reports/tr15/).
   * * May not contain any of the following ASCII characters: '/', ':', '?',
   * ',', or '#'.
   *
   * @generated from field: string vehicle_id = 2;
   */
  vehicleId: string;
};

/**
 * Describes the message fleet.GetVehicleRequest.
 * Use `create(GetVehicleRequestSchema)` to create a new message.
 */
export const GetVehicleRequestSchema: GenMessage<GetVehicleRequest> = /*@__PURE__*/
  messageDesc(file_fleet_v1_fleet_api, 1);

/**
 * The `ListVehicles` request message.
 *
 * @generated from message fleet.ListVehiclesRequest
 */
export type ListVehiclesRequest = Message<"fleet.ListVehiclesRequest"> & {
  /**
   * Required. Must be in the format `providers/{provider}`. The provider must
   * be the Google Cloud Project ID. For example, `sample-cloud-project`.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Optional. The maximum number of vehicles to return. The service may return
   * fewer than this number. If you don't specify this number, then the server
   * determines the number of results to return.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Optional. A page token, received from a previous `ListVehicles`
   * call. You must provide this in order to retrieve the subsequent page.
   * 
   * When paginating, all other parameters provided to `ListVehicles`
   * must match the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Optional. A filter query to apply when listing  vehicles. See
   * http://aip.dev/160 for examples of the filter syntax. If you don't specify
   * a value, or if you specify an empty string for the filter, then all
   *  vehicles are returned.
   * 
   * Note that the only queries supported for `ListVehicles` are
   * on vehicle attributes (for example, `attributes.<key> = <value>` or
   * `attributes.<key1> = <value1> AND attributes.<key2> = <value2>`). Also, all
   * attributes are stored as strings, so the only supported comparisons against
   * attributes are string comparisons. In order to compare against number or
   * boolean values, the values must be explicitly quoted to be treated as
   * strings (for example, `attributes.<key> = "10"` or
   * `attributes.<key> = "true"`).
   * 
   * The maximum number of restrictions allowed in a filter query is 50. A
   * restriction is a part of the query of the form
   * `attribute.<KEY> <COMPARATOR> <VALUE>`, for example `attributes.foo = bar`
   * is 1 restriction.
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * Optional. A filter that limits the vehicles returned to those whose last
   * known location was in the rectangular area defined by the viewport.
   *
   * @generated from field: google.geo.type.Viewport viewport = 5;
   */
  viewport?: Viewport;
};

/**
 * Describes the message fleet.ListVehiclesRequest.
 * Use `create(ListVehiclesRequestSchema)` to create a new message.
 */
export const ListVehiclesRequestSchema: GenMessage<ListVehiclesRequest> = /*@__PURE__*/
  messageDesc(file_fleet_v1_fleet_api, 2);

/**
 * The `ListVehicles` response message.
 *
 * The set of  vehicles that meet the requested filtering criteria.
 * When no filter is specified, the request returns all  vehicles. A
 * successful response can also be empty. An empty response indicates that no
 *  vehicles were found meeting the requested filter criteria.
 *
 * @generated from message fleet.ListVehiclesResponse
 */
export type ListVehiclesResponse = Message<"fleet.ListVehiclesResponse"> & {
  /**
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * @generated from field: repeated fleet.Vehicle vehicles = 2;
   */
  vehicles: Vehicle[];

  /**
   * You can pass this token in the `ListVehiclesRequest` to continue to
   * list results. When all of the results are returned, this field won't be in
   * the response, or it will be an empty string.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;

  /**
   * The total number of  vehicles that match the request criteria,
   * across all pages.
   *
   * @generated from field: int64 total_size = 4;
   */
  totalSize: bigint;
};

/**
 * Describes the message fleet.ListVehiclesResponse.
 * Use `create(ListVehiclesResponseSchema)` to create a new message.
 */
export const ListVehiclesResponseSchema: GenMessage<ListVehiclesResponse> = /*@__PURE__*/
  messageDesc(file_fleet_v1_fleet_api, 3);

/**
 * The `UpdateVehicle` request message.
 *
 * @generated from message fleet.UpdateVehicleRequest
 */
export type UpdateVehicleRequest = Message<"fleet.UpdateVehicleRequest"> & {
  /**
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * Required. The  Vehicle ID must be unique and subject to the
   * following restrictions:
   * 
   * * Must be a valid Unicode string.
   * * Limited to a maximum length of 64 characters.
   * * Normalized according to [Unicode Normalization Form C]
   * (http://www.unicode.org/reports/tr15/).
   * * May not contain any of the following ASCII characters: '/', ':', '?',
   * ',', or '#'.
   *
   * @generated from field: string vehicle_id = 2;
   */
  vehicleId: string;

  /**
   * Required. The `Vehicle` entity update to apply.
   * Note: You cannot update the name of the `Vehicle`.
   *
   * @generated from field: fleet.Vehicle vehicle = 3;
   */
  vehicle?: Vehicle;

  /**
   *  A field mask that indicates which `Vehicle` fields to
   * update. Note that the update_mask must contain at least one field.
   * 
   * This is a comma-separated list of fully qualified names of fields. Example:
   * `"remainingvehicle_journey_segments"`.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 4;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message fleet.UpdateVehicleRequest.
 * Use `create(UpdateVehicleRequestSchema)` to create a new message.
 */
export const UpdateVehicleRequestSchema: GenMessage<UpdateVehicleRequest> = /*@__PURE__*/
  messageDesc(file_fleet_v1_fleet_api, 4);

/**
 * The Last Mile  service.
 *
 * @generated from service fleet.FleetService
 */
export const FleetService: GenService<{
  /**
   * Creates and returns a new `Vehicle`.
   *
   * @generated from rpc fleet.FleetService.CreateVehicle
   */
  createVehicle: {
    methodKind: "unary";
    input: typeof CreateVehicleRequestSchema;
    output: typeof VehicleSchema;
  },
  /**
   * Returns the specified `Vehicle` instance.
   *
   * @generated from rpc fleet.FleetService.GetVehicle
   */
  getVehicle: {
    methodKind: "unary";
    input: typeof GetVehicleRequestSchema;
    output: typeof VehicleSchema;
  },
  /**
   * Writes updated `Vehicle` data to Fleet Engine
   *
   * @generated from rpc fleet.FleetService.UpdateVehicle
   */
  updateVehicle: {
    methodKind: "unary";
    input: typeof UpdateVehicleRequestSchema;
    output: typeof VehicleSchema;
  },
  /**
   * Gets all `Vehicle`s that meet the specified filtering criteria.
   *
   * @generated from rpc fleet.FleetService.ListVehicles
   */
  listVehicles: {
    methodKind: "unary";
    input: typeof ListVehiclesRequestSchema;
    output: typeof ListVehiclesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_fleet_v1_fleet_api, 0);

