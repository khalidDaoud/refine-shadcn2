// @generated by protoc-gen-es v2.2.2 with parameter "target=ts,import_extension=.js"
// @generated from file fleet/v1/common.proto (package fleet, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_type_latlng } from "../../google/type/latlng_pb.js";
import { file_google_type_money } from "../../google/type/money_pb.js";
import { file_google_api_field_behavior } from "../../google/api/field_behavior_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file fleet/v1/common.proto.
 */
export const file_fleet_v1_common: GenFile = /*@__PURE__*/
  fileDesc("ChVmbGVldC92MS9jb21tb24ucHJvdG8SBWZsZWV0ItYCChBNb25pdG9yaW5nU2Vuc29yEhEKCXNlbnNvcl9pZBgBIAEoCRImCgtzZW5zb3JfdHlwZRgCIAEoDjIRLmZsZWV0LlNlbnNvclR5cGUSFAoMbWFudWZhY3R1cmVyGAMgASgJEg0KBW1vZGVsGAQgASgJEhUKDXNlcmlhbF9udW1iZXIYBSABKAkSGAoQZmlybXdhcmVfdmVyc2lvbhgGIAEoCRI1ChFpbnN0YWxsYXRpb25fZGF0ZRgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASQwoOY29uZmlndXJhdGlvbnMYCCADKAsyKy5mbGVldC5Nb25pdG9yaW5nU2Vuc29yLkNvbmZpZ3VyYXRpb25zRW50cnkaNQoTQ29uZmlndXJhdGlvbnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBImoKClRpbWVXaW5kb3cSLgoKc3RhcnRfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIZW5kX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIvkDCgZQb2xpY3kSEQoJcG9saWN5X2lkGAEgASgJEiYKC3RpbWVfd2luZG93GAIgASgLMhEuZmxlZXQuVGltZVdpbmRvdxItCgtwb2xpY3lfdHlwZRgDIAEoDjIYLmZsZWV0LlBvbGljeS5Qb2xpY3lUeXBlEhMKC2Rlc2NyaXB0aW9uGAQgASgJEj4KEXBvbGljeV9wYXJhbWV0ZXJzGAUgAygLMiMuZmxlZXQuUG9saWN5LlBvbGljeVBhcmFtZXRlcnNFbnRyeRo3ChVQb2xpY3lQYXJhbWV0ZXJzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASL2AQoKUG9saWN5VHlwZRIbChdQT0xJQ1lfVFlQRV9VTlNQRUNJRklFRBAAEhkKFVBPTElDWV9UWVBFX01BWF9TUEVFRBABEiQKIFBPTElDWV9UWVBFX0ZPTExPV19UUkFGRklDX0dVSURFEAISGAoUUE9MSUNZX1RZUEVfR0VPRkVOQ0UQAxIeChpQT0xJQ1lfVFlQRV9HRU9GRU5DRV9OT19HTxAEEh0KGVBPTElDWV9UWVBFX1dPUktJTkdfSE9VUlMQBRIaChZQT0xJQ1lfVFlQRV9GVUVMX1VTQUdFEAYSFQoRUE9MSUNZX1RZUEVfT1RIRVIQByJ2CglBdHRyaWJ1dGUSCwoDa2V5GAEgASgJEhYKDHN0cmluZ192YWx1ZRgCIAEoCUgAEhQKCmJvb2xfdmFsdWUYAyABKAhIABIWCgxudW1iZXJfdmFsdWUYBCABKAFIAEIWChR0YXNrX2F0dHJpYnV0ZV92YWx1ZSLHAwoJQmFzZUFzc2V0EhUKCGFzc2V0X2lkGAEgASgJQgPgQQUSCwoDdmluGAIgASgJEjMKD3Byb2R1Y3Rpb25fZGF0ZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMQoNcHVyY2hhc2VfZGF0ZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNgoSdmVoaWNsZV9tb2RlbF9kYXRlGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI+ChpkYXRlVmVoaWNsZUZpcnN0UmVnaXN0ZXJlZBgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMwoSbW9uaXRvcmluZ19zZW5zb3JzGAcgAygLMhcuZmxlZXQuTW9uaXRvcmluZ1NlbnNvchI0ChJvcGVyYXRpb25hbF9zdGF0dXMYCCABKA4yGC5mbGVldC5PcGVyYXRpb25hbFN0YXR1cxIfCghwb2xpY2llcxgJIAMoCzINLmZsZWV0LlBvbGljeRIqChBhc3NldF9hdHRyaWJ1dGVzGAogASgLMhAuZmxlZXQuQXR0cmlidXRlKr8BChFPcGVyYXRpb25hbFN0YXR1cxIcChhBU1NFVF9TVEFUVVNfVU5TUEVDSUZJRUQQABIaChZBU1NFVF9TVEFUVVNfQVZBSUxBQkxFEAESFwoTQVNTRVRfU1RBVFVTX0lOX1VTRRACEhwKGEFTU0VUX1NUQVRVU19NQUlOVEVOQU5DRRADEh8KG0FTU0VUX1NUQVRVU19PVVRfT0ZfU0VSVklDRRAEEhgKFEFTU0VUX1NUQVRVU19SRVRJUkVEEAUq4QEKClNlbnNvclR5cGUSFQoRVFlQWUVfVU5TUEVDSUZJRUQQABILCgdncHNfZ3NtEAESCwoHZ3BzX3NhdBACEhoKFnRlbXBlcmF0dXJlX21vbml0b3JpbmcQAxITCg9mdWVsX21vbml0b3JpbmcQBBIWChJlbmdpbmVfZGlhZ25vc3RpY3MQBRIMCghkYXNoX2NhbRAGEg0KCWRhc2hfbWR2chAHEhwKGHRpcmVfcHJlc3N1cmVfbW9uaXRvcmluZxAIEh4KGmRyaXZlcl9iZWhhdmlvcl9tb25pdG9yaW5nEAlCgwEKCWNvbS5mbGVldEILQ29tbW9uUHJvdG9QAVo1Z2l0aHViLmNvbS9zbWFydGZpeS9sb2dpdGVjaC9wa2cvZmxlZXQvYXBpL3YxO2ZsZWV0cGKiAgNGWFiqAgVGbGVldMoCBUZsZWV04gIRRmxlZXRcR1BCTWV0YWRhdGHqAgVGbGVldGIGcHJvdG8z", [file_google_protobuf_empty, file_google_protobuf_timestamp, file_google_type_latlng, file_google_type_money, file_google_api_field_behavior]);

/**
 * @generated from message fleet.MonitoringSensor
 */
export type MonitoringSensor = Message<"fleet.MonitoringSensor"> & {
  /**
   * @generated from field: string sensor_id = 1;
   */
  sensorId: string;

  /**
   * @generated from field: fleet.SensorType sensor_type = 2;
   */
  sensorType: SensorType;

  /**
   * @generated from field: string manufacturer = 3;
   */
  manufacturer: string;

  /**
   * @generated from field: string model = 4;
   */
  model: string;

  /**
   * @generated from field: string serial_number = 5;
   */
  serialNumber: string;

  /**
   * @generated from field: string firmware_version = 6;
   */
  firmwareVersion: string;

  /**
   * @generated from field: google.protobuf.Timestamp installation_date = 7;
   */
  installationDate?: Timestamp;

  /**
   * @generated from field: map<string, string> configurations = 8;
   */
  configurations: { [key: string]: string };
};

/**
 * Describes the message fleet.MonitoringSensor.
 * Use `create(MonitoringSensorSchema)` to create a new message.
 */
export const MonitoringSensorSchema: GenMessage<MonitoringSensor> = /*@__PURE__*/
  messageDesc(file_fleet_v1_common, 0);

/**
 * @generated from message fleet.TimeWindow
 */
export type TimeWindow = Message<"fleet.TimeWindow"> & {
  /**
   * @generated from field: google.protobuf.Timestamp start_time = 1;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_time = 2;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message fleet.TimeWindow.
 * Use `create(TimeWindowSchema)` to create a new message.
 */
export const TimeWindowSchema: GenMessage<TimeWindow> = /*@__PURE__*/
  messageDesc(file_fleet_v1_common, 1);

/**
 * Policy management
 *
 * @generated from message fleet.Policy
 */
export type Policy = Message<"fleet.Policy"> & {
  /**
   * @generated from field: string policy_id = 1;
   */
  policyId: string;

  /**
   * @generated from field: fleet.TimeWindow time_window = 2;
   */
  timeWindow?: TimeWindow;

  /**
   * @generated from field: fleet.Policy.PolicyType policy_type = 3;
   */
  policyType: Policy_PolicyType;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: map<string, string> policy_parameters = 5;
   */
  policyParameters: { [key: string]: string };
};

/**
 * Describes the message fleet.Policy.
 * Use `create(PolicySchema)` to create a new message.
 */
export const PolicySchema: GenMessage<Policy> = /*@__PURE__*/
  messageDesc(file_fleet_v1_common, 2);

/**
 * @generated from enum fleet.Policy.PolicyType
 */
export enum Policy_PolicyType {
  /**
   * @generated from enum value: POLICY_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: POLICY_TYPE_MAX_SPEED = 1;
   */
  MAX_SPEED = 1,

  /**
   * @generated from enum value: POLICY_TYPE_FOLLOW_TRAFFIC_GUIDE = 2;
   */
  FOLLOW_TRAFFIC_GUIDE = 2,

  /**
   * @generated from enum value: POLICY_TYPE_GEOFENCE = 3;
   */
  GEOFENCE = 3,

  /**
   * @generated from enum value: POLICY_TYPE_GEOFENCE_NO_GO = 4;
   */
  GEOFENCE_NO_GO = 4,

  /**
   * @generated from enum value: POLICY_TYPE_WORKING_HOURS = 5;
   */
  WORKING_HOURS = 5,

  /**
   * @generated from enum value: POLICY_TYPE_FUEL_USAGE = 6;
   */
  FUEL_USAGE = 6,

  /**
   * @generated from enum value: POLICY_TYPE_OTHER = 7;
   */
  OTHER = 7,
}

/**
 * Describes the enum fleet.Policy.PolicyType.
 */
export const Policy_PolicyTypeSchema: GenEnum<Policy_PolicyType> = /*@__PURE__*/
  enumDesc(file_fleet_v1_common, 2, 0);

/**
 * @generated from message fleet.Attribute
 */
export type Attribute = Message<"fleet.Attribute"> & {
  /**
   * The attribute's key. Keys may not contain the colon character (:).
   *
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * The attribute's value, can be in string, bool, or double type. If none are
   * set the Attribute string_value will be stored as the empty string "".
   *
   * @generated from oneof fleet.Attribute.task_attribute_value
   */
  taskAttributeValue: {
    /**
     * String typed attribute value.
     *
     * @generated from field: string string_value = 2;
     */
    value: string;
    case: "stringValue";
  } | {
    /**
     * Boolean typed attribute value.
     *
     * @generated from field: bool bool_value = 3;
     */
    value: boolean;
    case: "boolValue";
  } | {
    /**
     * Double typed attribute value.
     *
     * @generated from field: double number_value = 4;
     */
    value: number;
    case: "numberValue";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message fleet.Attribute.
 * Use `create(AttributeSchema)` to create a new message.
 */
export const AttributeSchema: GenMessage<Attribute> = /*@__PURE__*/
  messageDesc(file_fleet_v1_common, 3);

/**
 * Base Asset Message
 *
 * @generated from message fleet.BaseAsset
 */
export type BaseAsset = Message<"fleet.BaseAsset"> & {
  /**
   * @generated from field: string asset_id = 1;
   */
  assetId: string;

  /**
   * @generated from field: string vin = 2;
   */
  vin: string;

  /**
   * @generated from field: google.protobuf.Timestamp production_date = 3;
   */
  productionDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp purchase_date = 4;
   */
  purchaseDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp vehicle_model_date = 5;
   */
  vehicleModelDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp dateVehicleFirstRegistered = 6;
   */
  dateVehicleFirstRegistered?: Timestamp;

  /**
   * @generated from field: repeated fleet.MonitoringSensor monitoring_sensors = 7;
   */
  monitoringSensors: MonitoringSensor[];

  /**
   * @generated from field: fleet.OperationalStatus operational_status = 8;
   */
  operationalStatus: OperationalStatus;

  /**
   * @generated from field: repeated fleet.Policy policies = 9;
   */
  policies: Policy[];

  /**
   * A list of custom  Vehicle attributes. A  Vehicle can have
   * at most 100 attributes, and each attribute must have a unique key.
   *
   * @generated from field: fleet.Attribute asset_attributes = 10;
   */
  assetAttributes?: Attribute;
};

/**
 * Describes the message fleet.BaseAsset.
 * Use `create(BaseAssetSchema)` to create a new message.
 */
export const BaseAssetSchema: GenMessage<BaseAsset> = /*@__PURE__*/
  messageDesc(file_fleet_v1_common, 4);

/**
 * Asset status enums
 *
 * @generated from enum fleet.OperationalStatus
 */
export enum OperationalStatus {
  /**
   * @generated from enum value: ASSET_STATUS_UNSPECIFIED = 0;
   */
  ASSET_STATUS_UNSPECIFIED = 0,

  /**
   * @generated from enum value: ASSET_STATUS_AVAILABLE = 1;
   */
  ASSET_STATUS_AVAILABLE = 1,

  /**
   * @generated from enum value: ASSET_STATUS_IN_USE = 2;
   */
  ASSET_STATUS_IN_USE = 2,

  /**
   * @generated from enum value: ASSET_STATUS_MAINTENANCE = 3;
   */
  ASSET_STATUS_MAINTENANCE = 3,

  /**
   * @generated from enum value: ASSET_STATUS_OUT_OF_SERVICE = 4;
   */
  ASSET_STATUS_OUT_OF_SERVICE = 4,

  /**
   * @generated from enum value: ASSET_STATUS_RETIRED = 5;
   */
  ASSET_STATUS_RETIRED = 5,
}

/**
 * Describes the enum fleet.OperationalStatus.
 */
export const OperationalStatusSchema: GenEnum<OperationalStatus> = /*@__PURE__*/
  enumDesc(file_fleet_v1_common, 0);

/**
 * Telemetry and monitoring
 *
 * @generated from enum fleet.SensorType
 */
export enum SensorType {
  /**
   * @generated from enum value: TYPYE_UNSPECIFIED = 0;
   */
  TYPYE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: gps_gsm = 1;
   */
  gps_gsm = 1,

  /**
   * @generated from enum value: gps_sat = 2;
   */
  gps_sat = 2,

  /**
   * @generated from enum value: temperature_monitoring = 3;
   */
  temperature_monitoring = 3,

  /**
   * @generated from enum value: fuel_monitoring = 4;
   */
  fuel_monitoring = 4,

  /**
   * @generated from enum value: engine_diagnostics = 5;
   */
  engine_diagnostics = 5,

  /**
   * @generated from enum value: dash_cam = 6;
   */
  dash_cam = 6,

  /**
   * @generated from enum value: dash_mdvr = 7;
   */
  dash_mdvr = 7,

  /**
   * @generated from enum value: tire_pressure_monitoring = 8;
   */
  tire_pressure_monitoring = 8,

  /**
   * @generated from enum value: driver_behavior_monitoring = 9;
   */
  driver_behavior_monitoring = 9,
}

/**
 * Describes the enum fleet.SensorType.
 */
export const SensorTypeSchema: GenEnum<SensorType> = /*@__PURE__*/
  enumDesc(file_fleet_v1_common, 1);

