// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts,import_extension=.js"
// @generated from file demand/v1/vehicle_api.proto (package demand, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../google/api/annotations_pb.js";
import { file_google_api_client } from "../../google/api/client_pb.js";
import { file_google_api_field_behavior } from "../../google/api/field_behavior_pb.js";
import { file_google_api_resource } from "../../google/api/resource_pb.js";
import { file_google_api_routing } from "../../google/api/routing_pb.js";
import type { Viewport } from "../../google/geo/type/viewport_pb.js";
import { file_google_geo_type_viewport } from "../../google/geo/type/viewport_pb.js";
import type { TerminalLocation, TripType, VehicleAttribute } from "./fleetengine_pb.js";
import { file_demand_v1_fleetengine } from "./fleetengine_pb.js";
import type { RequestHeader } from "./header_pb.js";
import { file_demand_v1_header } from "./header_pb.js";
import type { Vehicle, Vehicle_VehicleType, Vehicle_VehicleType_Category, VehicleSchema, VehicleState } from "./vehicles_pb.js";
import { file_demand_v1_vehicles } from "./vehicles_pb.js";
import type { Duration, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import type { LatLng } from "../../google/type/latlng_pb.js";
import { file_google_type_latlng } from "../../google/type/latlng_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file demand/v1/vehicle_api.proto.
 */
export const file_demand_v1_vehicle_api: GenFile = /*@__PURE__*/
  fileDesc("ChtkZW1hbmQvdjEvdmVoaWNsZV9hcGkucHJvdG8SBmRlbWFuZCKSAQoUQ3JlYXRlVmVoaWNsZVJlcXVlc3QSJQoGaGVhZGVyGAEgASgLMhUuZGVtYW5kLlJlcXVlc3RIZWFkZXISEwoGcGFyZW50GAMgASgJQgPgQQISFwoKdmVoaWNsZV9pZBgEIAEoCUID4EECEiUKB3ZlaGljbGUYBSABKAsyDy5kZW1hbmQuVmVoaWNsZUID4EECIu4BChFHZXRWZWhpY2xlUmVxdWVzdBIlCgZoZWFkZXIYASABKAsyFS5kZW1hbmQuUmVxdWVzdEhlYWRlchI4CgRuYW1lGAMgASgJQirgQQL6QSQKImZsZWV0ZW5naW5lLmdvb2dsZWFwaXMuY29tL1ZlaGljbGUSQQodY3VycmVudF9yb3V0ZV9zZWdtZW50X3ZlcnNpb24YBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjUKEXdheXBvaW50c192ZXJzaW9uGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCKtAQoUVXBkYXRlVmVoaWNsZVJlcXVlc3QSJQoGaGVhZGVyGAEgASgLMhUuZGVtYW5kLlJlcXVlc3RIZWFkZXISEQoEbmFtZRgDIAEoCUID4EECEiUKB3ZlaGljbGUYBCABKAsyDy5kZW1hbmQuVmVoaWNsZUID4EECEjQKC3VwZGF0ZV9tYXNrGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFza0ID4EECIo0BCh5VcGRhdGVWZWhpY2xlQXR0cmlidXRlc1JlcXVlc3QSJQoGaGVhZGVyGAEgASgLMhUuZGVtYW5kLlJlcXVlc3RIZWFkZXISEQoEbmFtZRgDIAEoCUID4EECEjEKCmF0dHJpYnV0ZXMYBCADKAsyGC5kZW1hbmQuVmVoaWNsZUF0dHJpYnV0ZUID4EECIlQKH1VwZGF0ZVZlaGljbGVBdHRyaWJ1dGVzUmVzcG9uc2USMQoKYXR0cmlidXRlcxgBIAMoCzIYLmRlbWFuZC5WZWhpY2xlQXR0cmlidXRlQgPgQQIixAgKFVNlYXJjaFZlaGljbGVzUmVxdWVzdBIlCgZoZWFkZXIYASABKAsyFS5kZW1hbmQuUmVxdWVzdEhlYWRlchITCgZwYXJlbnQYAyABKAlCA+BBAhIzCgxwaWNrdXBfcG9pbnQYBCABKAsyGC5kZW1hbmQuVGVybWluYWxMb2NhdGlvbkID4EECEi8KDWRyb3BvZmZfcG9pbnQYBSABKAsyGC5kZW1hbmQuVGVybWluYWxMb2NhdGlvbhIhChRwaWNrdXBfcmFkaXVzX21ldGVycxgGIAEoBUID4EECEhIKBWNvdW50GAcgASgFQgPgQQISHQoQbWluaW11bV9jYXBhY2l0eRgIIAEoBUID4EECEikKCnRyaXBfdHlwZXMYCSADKA4yEC5kZW1hbmQuVHJpcFR5cGVCA+BBAhI0ChFtYXhpbXVtX3N0YWxlbmVzcxgKIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhI3Cg12ZWhpY2xlX3R5cGVzGA4gAygLMhsuZGVtYW5kLlZlaGljbGUuVmVoaWNsZVR5cGVCA+BBAhI1ChNyZXF1aXJlZF9hdHRyaWJ1dGVzGAwgAygLMhguZGVtYW5kLlZlaGljbGVBdHRyaWJ1dGUSQAoacmVxdWlyZWRfb25lX29mX2F0dHJpYnV0ZXMYDyADKAsyHC5kZW1hbmQuVmVoaWNsZUF0dHJpYnV0ZUxpc3QSRAoecmVxdWlyZWRfb25lX29mX2F0dHJpYnV0ZV9zZXRzGBQgAygLMhwuZGVtYW5kLlZlaGljbGVBdHRyaWJ1dGVMaXN0EkYKCG9yZGVyX2J5GA0gASgOMi8uZGVtYW5kLlNlYXJjaFZlaGljbGVzUmVxdWVzdC5WZWhpY2xlTWF0Y2hPcmRlckID4EECEhwKFGluY2x1ZGVfYmFja190b19iYWNrGBIgASgIEg8KB3RyaXBfaWQYEyABKAkSUAoVY3VycmVudF90cmlwc19wcmVzZW50GBUgASgOMjEuZGVtYW5kLlNlYXJjaFZlaGljbGVzUmVxdWVzdC5DdXJyZW50VHJpcHNQcmVzZW50EhMKBmZpbHRlchgWIAEoCUID4EEBIqoBChFWZWhpY2xlTWF0Y2hPcmRlchIfChtVTktOT1dOX1ZFSElDTEVfTUFUQ0hfT1JERVIQABIUChBQSUNLVVBfUE9JTlRfRVRBEAESGQoVUElDS1VQX1BPSU5UX0RJU1RBTkNFEAISFQoRRFJPUE9GRl9QT0lOVF9FVEEQAxIiCh5QSUNLVVBfUE9JTlRfU1RSQUlHSFRfRElTVEFOQ0UQBBIICgRDT1NUEAUiTwoTQ3VycmVudFRyaXBzUHJlc2VudBIlCiFDVVJSRU5UX1RSSVBTX1BSRVNFTlRfVU5TUEVDSUZJRUQQABIICgROT05FEAESBwoDQU5ZEAIiPwoWU2VhcmNoVmVoaWNsZXNSZXNwb25zZRIlCgdtYXRjaGVzGAEgAygLMhQuZGVtYW5kLlZlaGljbGVNYXRjaCLKBAoTTGlzdFZlaGljbGVzUmVxdWVzdBIlCgZoZWFkZXIYDCABKAsyFS5kZW1hbmQuUmVxdWVzdEhlYWRlchITCgZwYXJlbnQYASABKAlCA+BBAhIRCglwYWdlX3NpemUYAyABKAUSEgoKcGFnZV90b2tlbhgEIAEoCRI1ChBtaW5pbXVtX2NhcGFjaXR5GAYgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSJAoKdHJpcF90eXBlcxgHIAMoDjIQLmRlbWFuZC5UcmlwVHlwZRI0ChFtYXhpbXVtX3N0YWxlbmVzcxgIIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhJKChd2ZWhpY2xlX3R5cGVfY2F0ZWdvcmllcxgJIAMoDjIkLmRlbWFuZC5WZWhpY2xlLlZlaGljbGVUeXBlLkNhdGVnb3J5QgPgQQISGwoTcmVxdWlyZWRfYXR0cmlidXRlcxgKIAMoCRIiChpyZXF1aXJlZF9vbmVfb2ZfYXR0cmlidXRlcxgNIAMoCRImCh5yZXF1aXJlZF9vbmVfb2ZfYXR0cmlidXRlX3NldHMYDyADKAkSKwoNdmVoaWNsZV9zdGF0ZRgLIAEoDjIULmRlbWFuZC5WZWhpY2xlU3RhdGUSFAoMb25fdHJpcF9vbmx5GA4gASgIEhMKBmZpbHRlchgQIAEoCUID4EEBEjAKCHZpZXdwb3J0GBEgASgLMhkuZ29vZ2xlLmdlby50eXBlLlZpZXdwb3J0QgPgQQEiawoUTGlzdFZlaGljbGVzUmVzcG9uc2USIQoIdmVoaWNsZXMYASADKAsyDy5kZW1hbmQuVmVoaWNsZRIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkSFwoKdG90YWxfc2l6ZRgDIAEoA0ID4EECIlkKCFdheXBvaW50EiQKB2xhdF9sbmcYASABKAsyEy5nb29nbGUudHlwZS5MYXRMbmcSJwoDZXRhGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCKwBgoMVmVoaWNsZU1hdGNoEiUKB3ZlaGljbGUYASABKAsyDy5kZW1hbmQuVmVoaWNsZUID4EECEjYKEnZlaGljbGVfcGlja3VwX2V0YRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASQwoedmVoaWNsZV9waWNrdXBfZGlzdGFuY2VfbWV0ZXJzGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSVgosdmVoaWNsZV9waWNrdXBfc3RyYWlnaHRfbGluZV9kaXN0YW5jZV9tZXRlcnMYCyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZUID4EECEjcKE3ZlaGljbGVfZHJvcG9mZl9ldGEYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEk4KKXZlaGljbGVfcGlja3VwX3RvX2Ryb3BvZmZfZGlzdGFuY2VfbWV0ZXJzGAUgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSKAoJdHJpcF90eXBlGAYgASgOMhAuZGVtYW5kLlRyaXBUeXBlQgPgQQISMQoXdmVoaWNsZV90cmlwc193YXlwb2ludHMYByADKAsyEC5kZW1hbmQuV2F5cG9pbnQSQQoSdmVoaWNsZV9tYXRjaF90eXBlGAggASgOMiUuZGVtYW5kLlZlaGljbGVNYXRjaC5WZWhpY2xlTWF0Y2hUeXBlEk0KFHJlcXVlc3RlZF9vcmRlcmVkX2J5GAkgASgOMi8uZGVtYW5kLlNlYXJjaFZlaGljbGVzUmVxdWVzdC5WZWhpY2xlTWF0Y2hPcmRlchJDCgpvcmRlcmVkX2J5GAogASgOMi8uZGVtYW5kLlNlYXJjaFZlaGljbGVzUmVxdWVzdC5WZWhpY2xlTWF0Y2hPcmRlciJnChBWZWhpY2xlTWF0Y2hUeXBlEgsKB1VOS05PV04QABINCglFWENMVVNJVkUQARIQCgxCQUNLX1RPX0JBQ0sQAhILCgdDQVJQT09MEAMSGAoUQ0FSUE9PTF9CQUNLX1RPX0JBQ0sQBCJEChRWZWhpY2xlQXR0cmlidXRlTGlzdBIsCgphdHRyaWJ1dGVzGAEgAygLMhguZGVtYW5kLlZlaGljbGVBdHRyaWJ1dGUy1ggKDlZlaGljbGVTZXJ2aWNlEp0BCg1DcmVhdGVWZWhpY2xlEhwuZGVtYW5kLkNyZWF0ZVZlaGljbGVSZXF1ZXN0Gg8uZGVtYW5kLlZlaGljbGUiXYLT5JMCLDoHdmVoaWNsZSIhL3YxL3twYXJlbnQ9cHJvdmlkZXJzLyp9L3ZlaGljbGVzitPkkwIlEiMKBnBhcmVudBIZe3Byb3ZpZGVyX2lkPXByb3ZpZGVycy8qfRKMAQoKR2V0VmVoaWNsZRIZLmRlbWFuZC5HZXRWZWhpY2xlUmVxdWVzdBoPLmRlbWFuZC5WZWhpY2xlIlKC0+STAiMSIS92MS97bmFtZT1wcm92aWRlcnMvKi92ZWhpY2xlcy8qfYrT5JMCIxIhCgRuYW1lEhl7cHJvdmlkZXJfaWQ9cHJvdmlkZXJzLyp9EpsBCg1VcGRhdGVWZWhpY2xlEhwuZGVtYW5kLlVwZGF0ZVZlaGljbGVSZXF1ZXN0Gg8uZGVtYW5kLlZlaGljbGUiW4LT5JMCLDoHdmVoaWNsZRohL3YxL3tuYW1lPXByb3ZpZGVycy8qL3ZlaGljbGVzLyp9itPkkwIjEiEKBG5hbWUSGXtwcm92aWRlcl9pZD1wcm92aWRlcnMvKn0S0gEKF1VwZGF0ZVZlaGljbGVBdHRyaWJ1dGVzEiYuZGVtYW5kLlVwZGF0ZVZlaGljbGVBdHRyaWJ1dGVzUmVxdWVzdBonLmRlbWFuZC5VcGRhdGVWZWhpY2xlQXR0cmlidXRlc1Jlc3BvbnNlImaC0+STAjc6ASoiMi92MS97bmFtZT1wcm92aWRlcnMvKi92ZWhpY2xlcy8qfTp1cGRhdGVBdHRyaWJ1dGVzitPkkwIjEiEKBG5hbWUSGXtwcm92aWRlcl9pZD1wcm92aWRlcnMvKn0SnwEKDExpc3RWZWhpY2xlcxIbLmRlbWFuZC5MaXN0VmVoaWNsZXNSZXF1ZXN0GhwuZGVtYW5kLkxpc3RWZWhpY2xlc1Jlc3BvbnNlIlSC0+STAiMSIS92MS97cGFyZW50PXByb3ZpZGVycy8qfS92ZWhpY2xlc4rT5JMCJRIjCgZwYXJlbnQSGXtwcm92aWRlcl9pZD1wcm92aWRlcnMvKn0SrwEKDlNlYXJjaFZlaGljbGVzEh0uZGVtYW5kLlNlYXJjaFZlaGljbGVzUmVxdWVzdBoeLmRlbWFuZC5TZWFyY2hWZWhpY2xlc1Jlc3BvbnNlIl6C0+STAi06ASoiKC92MS97cGFyZW50PXByb3ZpZGVycy8qfS92ZWhpY2xlczpzZWFyY2iK0+STAiUSIwoGcGFyZW50Ehl7cHJvdmlkZXJfaWQ9cHJvdmlkZXJzLyp9Gk7KQRpmbGVldGVuZ2luZS5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvY2xvdWQtcGxhdGZvcm1CjwEKCmNvbS5kZW1hbmRCD1ZlaGljbGVBcGlQcm90b1ABWjhnaXRodWIuY29tL3NtYXJ0Zml5L2xvZ2l0ZWNoL3BrZy9kZW1hbmQvYXBpL3YxO2RlbWFuZHlwYqICA0RYWKoCBkRlbWFuZMoCBkRlbWFuZOICEkRlbWFuZFxHUEJNZXRhZGF0YeoCBkRlbWFuZGIGcHJvdG8z", [file_google_api_annotations, file_google_api_client, file_google_api_field_behavior, file_google_api_resource, file_google_api_routing, file_google_geo_type_viewport, file_demand_v1_fleetengine, file_demand_v1_header, file_demand_v1_vehicles, file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_protobuf_wrappers, file_google_type_latlng]);

/**
 * `CreateVehicle` request message.
 *
 * @generated from message demand.CreateVehicleRequest
 */
export type CreateVehicleRequest = Message<"demand.CreateVehicleRequest"> & {
  /**
   * The standard Fleet Engine request header.
   *
   * @generated from field: demand.RequestHeader header = 1;
   */
  header?: RequestHeader;

  /**
   * Required. Must be in the format `providers/{provider}`.
   * The provider must be the Project ID (for example, `sample-cloud-project`)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   *
   * @generated from field: string parent = 3;
   */
  parent: string;

  /**
   * Required. Unique Vehicle ID.
   * Subject to the following restrictions:
   * 
   * * Must be a valid Unicode string.
   * * Limited to a maximum length of 64 characters.
   * * Normalized according to [Unicode Normalization Form C]
   * (http://www.unicode.org/reports/tr15/).
   * * May not contain any of the following ASCII characters: '/', ':', '?',
   * ',', or '#'.
   *
   * @generated from field: string vehicle_id = 4;
   */
  vehicleId: string;

  /**
   * Required. The Vehicle entity to create. When creating a Vehicle, the
   * following fields are required:
   * 
   * * `vehicleState`
   * * `supportedTripTypes`
   * * `maximumCapacity`
   * * `vehicleType`
   * 
   * When creating a Vehicle, the following fields are ignored:
   * 
   * * `name`
   * * `currentTrips`
   * * `availableCapacity`
   * * `current_route_segment`
   * * `current_route_segment_end_point`
   * * `current_route_segment_version`
   * * `current_route_segment_traffic`
   * * `route`
   * * `waypoints`
   * * `waypoints_version`
   * * `remaining_distance_meters`
   * * `remaining_time_seconds`
   * * `eta_to_next_waypoint`
   * * `navigation_status`
   * 
   * All other fields are optional and used if provided.
   *
   * @generated from field: demand.Vehicle vehicle = 5;
   */
  vehicle?: Vehicle;
};

/**
 * Describes the message demand.CreateVehicleRequest.
 * Use `create(CreateVehicleRequestSchema)` to create a new message.
 */
export const CreateVehicleRequestSchema: GenMessage<CreateVehicleRequest> = /*@__PURE__*/
  messageDesc(file_demand_v1_vehicle_api, 0);

/**
 * `GetVehicle` request message.
 *
 * @generated from message demand.GetVehicleRequest
 */
export type GetVehicleRequest = Message<"demand.GetVehicleRequest"> & {
  /**
   * The standard Fleet Engine request header.
   *
   * @generated from field: demand.RequestHeader header = 1;
   */
  header?: RequestHeader;

  /**
   * Required. Must be in the format
   * `providers/{provider}/vehicles/{vehicle}`.
   * The provider must be the Project ID (for example, `sample-cloud-project`)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Indicates the minimum timestamp (exclusive) for which
   * `Vehicle.current_route_segment` is retrieved.
   * If the route is unchanged since this timestamp, the `current_route_segment`
   * field is not set in the response. If a minimum is unspecified, the
   * `current_route_segment` is always retrieved.
   *
   * @generated from field: google.protobuf.Timestamp current_route_segment_version = 4;
   */
  currentRouteSegmentVersion?: Timestamp;

  /**
   * Indicates the minimum timestamp (exclusive) for which `Vehicle.waypoints`
   * data is retrieved. If the waypoints are unchanged since this timestamp, the
   * `vehicle.waypoints` data is not set in the response. If this field is
   * unspecified, `vehicle.waypoints` is always retrieved.
   *
   * @generated from field: google.protobuf.Timestamp waypoints_version = 5;
   */
  waypointsVersion?: Timestamp;
};

/**
 * Describes the message demand.GetVehicleRequest.
 * Use `create(GetVehicleRequestSchema)` to create a new message.
 */
export const GetVehicleRequestSchema: GenMessage<GetVehicleRequest> = /*@__PURE__*/
  messageDesc(file_demand_v1_vehicle_api, 1);

/**
 * `UpdateVehicle request message.
 *
 * @generated from message demand.UpdateVehicleRequest
 */
export type UpdateVehicleRequest = Message<"demand.UpdateVehicleRequest"> & {
  /**
   * The standard Fleet Engine request header.
   *
   * @generated from field: demand.RequestHeader header = 1;
   */
  header?: RequestHeader;

  /**
   * Required. Must be in the format
   * `providers/{provider}/vehicles/{vehicle}`.
   * The {provider} must be the Project ID (for example, `sample-cloud-project`)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Required. The `Vehicle` entity values to apply.  When updating a `Vehicle`,
   * the following fields may not be updated as they are managed by the
   * server.
   * 
   * * `available_capacity`
   * * `current_route_segment_version`
   * * `current_trips`
   * * `name`
   * * `waypoints_version`
   * 
   * If the `attributes` field is updated, **all** the vehicle's attributes are
   * replaced with the attributes provided in the request. If you want to update
   * only some attributes, see the `UpdateVehicleAttributes` method.
   * 
   * Likewise, the `waypoints` field can be updated, but must contain all the
   * waypoints currently on the vehicle, and no other waypoints.
   *
   * @generated from field: demand.Vehicle vehicle = 4;
   */
  vehicle?: Vehicle;

  /**
   * Required. A field mask indicating which fields of the `Vehicle` to update.
   * At least one field name must be provided.
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 5;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message demand.UpdateVehicleRequest.
 * Use `create(UpdateVehicleRequestSchema)` to create a new message.
 */
export const UpdateVehicleRequestSchema: GenMessage<UpdateVehicleRequest> = /*@__PURE__*/
  messageDesc(file_demand_v1_vehicle_api, 2);

/**
 * `UpdateVehicleAttributes` request message.
 *
 * @generated from message demand.UpdateVehicleAttributesRequest
 */
export type UpdateVehicleAttributesRequest = Message<"demand.UpdateVehicleAttributesRequest"> & {
  /**
   * The standard Fleet Engine request header.
   *
   * @generated from field: demand.RequestHeader header = 1;
   */
  header?: RequestHeader;

  /**
   * Required. Must be in the format `providers/{provider}/vehicles/{vehicle}`.
   * The provider must be the Project ID (for example, `sample-cloud-project`)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * Required. The vehicle attributes to update. Unmentioned attributes are not
   * altered or removed.
   *
   * @generated from field: repeated demand.VehicleAttribute attributes = 4;
   */
  attributes: VehicleAttribute[];
};

/**
 * Describes the message demand.UpdateVehicleAttributesRequest.
 * Use `create(UpdateVehicleAttributesRequestSchema)` to create a new message.
 */
export const UpdateVehicleAttributesRequestSchema: GenMessage<UpdateVehicleAttributesRequest> = /*@__PURE__*/
  messageDesc(file_demand_v1_vehicle_api, 3);

/**
 * `UpdateVehicleAttributes` response message.
 *
 * @generated from message demand.UpdateVehicleAttributesResponse
 */
export type UpdateVehicleAttributesResponse = Message<"demand.UpdateVehicleAttributesResponse"> & {
  /**
   * Required. The updated full list of vehicle attributes, including new,
   * altered, and untouched attributes.
   *
   * @generated from field: repeated demand.VehicleAttribute attributes = 1;
   */
  attributes: VehicleAttribute[];
};

/**
 * Describes the message demand.UpdateVehicleAttributesResponse.
 * Use `create(UpdateVehicleAttributesResponseSchema)` to create a new message.
 */
export const UpdateVehicleAttributesResponseSchema: GenMessage<UpdateVehicleAttributesResponse> = /*@__PURE__*/
  messageDesc(file_demand_v1_vehicle_api, 4);

/**
 * `SearchVehicles` request message.
 *
 * @generated from message demand.SearchVehiclesRequest
 */
export type SearchVehiclesRequest = Message<"demand.SearchVehiclesRequest"> & {
  /**
   * The standard Fleet Engine request header.
   *
   * @generated from field: demand.RequestHeader header = 1;
   */
  header?: RequestHeader;

  /**
   * Required. Must be in the format `providers/{provider}`.
   * The provider must be the Project ID (for example, `sample-cloud-project`)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   *
   * @generated from field: string parent = 3;
   */
  parent: string;

  /**
   * Required. The pickup point to search near.
   *
   * @generated from field: demand.TerminalLocation pickup_point = 4;
   */
  pickupPoint?: TerminalLocation;

  /**
   * The customer's intended dropoff location. The field is required if
   * `trip_types` contains `TripType.SHARED`.
   *
   * @generated from field: demand.TerminalLocation dropoff_point = 5;
   */
  dropoffPoint?: TerminalLocation;

  /**
   * Required. Defines the vehicle search radius around the pickup point. Only
   * vehicles within the search radius will be returned. Value must be between
   * 400 and 10000 meters (inclusive).
   *
   * @generated from field: int32 pickup_radius_meters = 6;
   */
  pickupRadiusMeters: number;

  /**
   * Required. Specifies the maximum number of vehicles to return. The value
   * must be between 1 and 50 (inclusive).
   *
   * @generated from field: int32 count = 7;
   */
  count: number;

  /**
   * Required. Specifies the number of passengers being considered for a trip.
   * The value must be greater than or equal to one. The driver is not
   * considered in the capacity value.
   *
   * @generated from field: int32 minimum_capacity = 8;
   */
  minimumCapacity: number;

  /**
   * Required. Represents the type of proposed trip. Must include exactly one
   * type. `UNKNOWN_TRIP_TYPE` is not allowed. Restricts the search to only
   * those vehicles that can support that trip type.
   *
   * @generated from field: repeated demand.TripType trip_types = 9;
   */
  tripTypes: TripType[];

  /**
   * Restricts the search to only those vehicles that have sent location updates
   * to Fleet Engine within the specified duration. Stationary vehicles still
   * transmitting their locations are not considered stale. If this field is not
   * set, the server uses five minutes as the default value.
   *
   * @generated from field: google.protobuf.Duration maximum_staleness = 10;
   */
  maximumStaleness?: Duration;

  /**
   * Required. Restricts the search to vehicles with one of the specified types.
   * At least one vehicle type must be specified. VehicleTypes with a category
   * of `UNKNOWN` are not allowed.
   *
   * @generated from field: repeated demand.Vehicle.VehicleType vehicle_types = 14;
   */
  vehicleTypes: Vehicle_VehicleType[];

  /**
   * Callers can form complex logical operations using any combination of the
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attribute_sets` fields.
   * 
   * `required_attributes` is a list; `required_one_of_attributes` uses a
   * message which allows a list of lists. In combination, the two fields allow
   * the composition of this expression:
   * 
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
   * ...)
   * AND
   * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
   * ...)
   * ```
   * 
   * Restricts the search to only those vehicles with the specified attributes.
   * This field is a conjunction/AND operation. A max of 50 required_attributes
   * is allowed. This matches the maximum number of attributes allowed on a
   * vehicle.
   *
   * @generated from field: repeated demand.VehicleAttribute required_attributes = 12;
   */
  requiredAttributes: VehicleAttribute[];

  /**
   * Restricts the search to only those vehicles with at least one of
   * the specified attributes in each `VehicleAttributeList`. Within each
   * list, a vehicle must match at least one of the attributes. This field is an
   * inclusive disjunction/OR operation in each `VehicleAttributeList` and a
   * conjunction/AND operation across the collection of `VehicleAttributeList`.
   *
   * @generated from field: repeated demand.VehicleAttributeList required_one_of_attributes = 15;
   */
  requiredOneOfAttributes: VehicleAttributeList[];

  /**
   * `required_one_of_attribute_sets` provides additional functionality.
   * 
   * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
   * uses a message which allows a list of lists, allowing expressions such as
   * this one:
   * 
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (
   *   (required_one_of_attribute_sets[0][0] AND
   *   required_one_of_attribute_sets[0][1] AND
   *   ...)
   *   OR
   *   (required_one_of_attribute_sets[1][0] AND
   *   required_one_of_attribute_sets[1][1] AND
   *   ...)
   * )
   * ```
   * 
   * Restricts the search to only those vehicles with all the attributes in a
   * `VehicleAttributeList`. Within each list, a
   * vehicle must match all of the attributes. This field is a conjunction/AND
   * operation in each `VehicleAttributeList` and inclusive disjunction/OR
   * operation across the collection of `VehicleAttributeList`.
   *
   * @generated from field: repeated demand.VehicleAttributeList required_one_of_attribute_sets = 20;
   */
  requiredOneOfAttributeSets: VehicleAttributeList[];

  /**
   * Required. Specifies the desired ordering criterion for results.
   *
   * @generated from field: demand.SearchVehiclesRequest.VehicleMatchOrder order_by = 13;
   */
  orderBy: SearchVehiclesRequest_VehicleMatchOrder;

  /**
   * This indicates if vehicles with a single active trip are eligible for this
   * search. This field is only used when `current_trips_present` is
   * unspecified. When `current_trips_present` is unspecified  and  this field
   * is `false`, vehicles with assigned trips are excluded from the search
   * results. When `current_trips_present` is unspecified and this field is
   * `true`, search results can include vehicles with one active trip that has a
   * status of `ENROUTE_TO_DROPOFF`. When `current_trips_present` is specified,
   * this field cannot be set to true.
   * 
   * The default value is `false`.
   *
   * @generated from field: bool include_back_to_back = 18;
   */
  includeBackToBack: boolean;

  /**
   * Indicates the trip associated with this `SearchVehicleRequest`.
   *
   * @generated from field: string trip_id = 19;
   */
  tripId: string;

  /**
   * This indicates if vehicles with active trips are eligible for this search.
   * This must be set to something other than
   * `CURRENT_TRIPS_PRESENT_UNSPECIFIED` if `trip_type` includes `SHARED`.
   *
   * @generated from field: demand.SearchVehiclesRequest.CurrentTripsPresent current_trips_present = 21;
   */
  currentTripsPresent: SearchVehiclesRequest_CurrentTripsPresent;

  /**
   * Optional. A filter query to apply when searching vehicles. See
   * http://aip.dev/160 for examples of the filter syntax.
   * 
   * This field is designed to replace the `required_attributes`,
   * `required_one_of_attributes`, and `required_one_of_attributes_sets` fields.
   * If a non-empty value is specified here, the following fields must be empty:
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attributes_sets`.
   * 
   * This filter functions as an AND clause with other constraints,
   * such as `minimum_capacity` or `vehicle_types`.
   * 
   * Note that the only queries supported are on vehicle attributes (for
   * example, `attributes.<key> = <value>` or `attributes.<key1> = <value1> AND
   * attributes.<key2> = <value2>`). The maximum number of restrictions allowed
   * in a filter query is 50.
   * 
   * Also, all attributes are stored as strings, so the only supported
   * comparisons against attributes are string comparisons. In order to compare
   * against number or boolean values, the values must be explicitly quoted to
   * be treated as strings (for example, `attributes.<key> = "10"` or
   * `attributes.<key> = "true"`).
   *
   * @generated from field: string filter = 22;
   */
  filter: string;
};

/**
 * Describes the message demand.SearchVehiclesRequest.
 * Use `create(SearchVehiclesRequestSchema)` to create a new message.
 */
export const SearchVehiclesRequestSchema: GenMessage<SearchVehiclesRequest> = /*@__PURE__*/
  messageDesc(file_demand_v1_vehicle_api, 5);

/**
 * Specifies the order of the vehicle matches in the response.
 *
 * @generated from enum demand.SearchVehiclesRequest.VehicleMatchOrder
 */
export enum SearchVehiclesRequest_VehicleMatchOrder {
  /**
   * Default, used for unspecified or unrecognized vehicle matches order.
   *
   * @generated from enum value: UNKNOWN_VEHICLE_MATCH_ORDER = 0;
   */
  UNKNOWN_VEHICLE_MATCH_ORDER = 0,

  /**
   * Ascending order by vehicle driving time to the pickup point.
   *
   * @generated from enum value: PICKUP_POINT_ETA = 1;
   */
  PICKUP_POINT_ETA = 1,

  /**
   * Ascending order by vehicle driving distance to the pickup point.
   *
   * @generated from enum value: PICKUP_POINT_DISTANCE = 2;
   */
  PICKUP_POINT_DISTANCE = 2,

  /**
   * Ascending order by vehicle driving time to the dropoff point. This order
   * can only be used if the dropoff point is specified in the request.
   *
   * @generated from enum value: DROPOFF_POINT_ETA = 3;
   */
  DROPOFF_POINT_ETA = 3,

  /**
   * Ascending order by straight-line distance from the vehicle's last
   * reported location to the pickup point.
   *
   * @generated from enum value: PICKUP_POINT_STRAIGHT_DISTANCE = 4;
   */
  PICKUP_POINT_STRAIGHT_DISTANCE = 4,

  /**
   * Ascending order by the configured match cost. Match cost is defined as a
   * weighted calculation between straight-line distance and ETA. Weights are
   * set with default values and can be modified per customer. Please contact
   * Google support if these weights need to be modified for your project.
   *
   * @generated from enum value: COST = 5;
   */
  COST = 5,
}

/**
 * Describes the enum demand.SearchVehiclesRequest.VehicleMatchOrder.
 */
export const SearchVehiclesRequest_VehicleMatchOrderSchema: GenEnum<SearchVehiclesRequest_VehicleMatchOrder> = /*@__PURE__*/
  enumDesc(file_demand_v1_vehicle_api, 5, 0);

/**
 * Specifies the types of restrictions on a vehicle's current trips.
 *
 * @generated from enum demand.SearchVehiclesRequest.CurrentTripsPresent
 */
export enum SearchVehiclesRequest_CurrentTripsPresent {
  /**
   * The availability of vehicles with trips present is governed by the
   * `include_back_to_back` field.
   *
   * @generated from enum value: CURRENT_TRIPS_PRESENT_UNSPECIFIED = 0;
   */
  CURRENT_TRIPS_PRESENT_UNSPECIFIED = 0,

  /**
   * Vehicles without trips can appear in search results. When this value is
   * used, `include_back_to_back` cannot be `true`.
   *
   * @generated from enum value: NONE = 1;
   */
  NONE = 1,

  /**
   * Vehicles with at most 5 current trips and 10 waypoints are included
   * in the search results. When this value is used, `include_back_to_back`
   * cannot be `true`.
   *
   * @generated from enum value: ANY = 2;
   */
  ANY = 2,
}

/**
 * Describes the enum demand.SearchVehiclesRequest.CurrentTripsPresent.
 */
export const SearchVehiclesRequest_CurrentTripsPresentSchema: GenEnum<SearchVehiclesRequest_CurrentTripsPresent> = /*@__PURE__*/
  enumDesc(file_demand_v1_vehicle_api, 5, 1);

/**
 * `SearchVehicles` response message.
 *
 * @generated from message demand.SearchVehiclesResponse
 */
export type SearchVehiclesResponse = Message<"demand.SearchVehiclesResponse"> & {
  /**
   * List of vehicles that match the `SearchVehiclesRequest` criteria, ordered
   * according to `SearchVehiclesRequest.order_by` field.
   *
   * @generated from field: repeated demand.VehicleMatch matches = 1;
   */
  matches: VehicleMatch[];
};

/**
 * Describes the message demand.SearchVehiclesResponse.
 * Use `create(SearchVehiclesResponseSchema)` to create a new message.
 */
export const SearchVehiclesResponseSchema: GenMessage<SearchVehiclesResponse> = /*@__PURE__*/
  messageDesc(file_demand_v1_vehicle_api, 6);

/**
 * `ListVehicles` request message.
 *
 * @generated from message demand.ListVehiclesRequest
 */
export type ListVehiclesRequest = Message<"demand.ListVehiclesRequest"> & {
  /**
   * The standard Fleet Engine request header.
   *
   * @generated from field: demand.RequestHeader header = 12;
   */
  header?: RequestHeader;

  /**
   * Required. Must be in the format `providers/{provider}`.
   * The provider must be the Project ID (for example, `sample-cloud-project`)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of vehicles to return.
   * Default value: 100.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * The value of the `next_page_token` provided by a previous call to
   * `ListVehicles` so that you can paginate through groups of vehicles. The
   * value is undefined if the filter criteria of the request is not the same as
   * the filter criteria for the previous call to `ListVehicles`.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  /**
   * Specifies the required minimum capacity of the vehicle. All vehicles
   * returned will have a `maximum_capacity` greater than or equal to this
   * value. If set, must be greater or equal to 0.
   *
   * @generated from field: google.protobuf.Int32Value minimum_capacity = 6;
   */
  minimumCapacity?: number;

  /**
   * Restricts the response to vehicles that support at least one of the
   * specified trip types.
   *
   * @generated from field: repeated demand.TripType trip_types = 7;
   */
  tripTypes: TripType[];

  /**
   * Restricts the response to vehicles that have sent location updates to Fleet
   * Engine within the specified duration. Stationary vehicles still
   * transmitting their locations are not considered stale. If present, must be
   * a valid positive duration.
   *
   * @generated from field: google.protobuf.Duration maximum_staleness = 8;
   */
  maximumStaleness?: Duration;

  /**
   * Required. Restricts the response to vehicles with one of the specified type
   * categories. `UNKNOWN` is not allowed.
   *
   * @generated from field: repeated demand.Vehicle.VehicleType.Category vehicle_type_categories = 9;
   */
  vehicleTypeCategories: Vehicle_VehicleType_Category[];

  /**
   * Callers can form complex logical operations using any combination of the
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attribute_sets` fields.
   * 
   * `required_attributes` is a list; `required_one_of_attributes` uses a
   * message which allows a list of lists. In combination, the two fields allow
   * the composition of this expression:
   * 
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (required_one_of_attributes[0][0] OR required_one_of_attributes[0][1] OR
   * ...)
   * AND
   * (required_one_of_attributes[1][0] OR required_one_of_attributes[1][1] OR
   * ...)
   * ```
   * 
   * Restricts the response to vehicles with the specified attributes. This
   * field is a conjunction/AND operation. A max of 50 required_attributes is
   * allowed. This matches the maximum number of attributes allowed on a
   * vehicle. Each repeated string should be of the format "key:value".
   *
   * @generated from field: repeated string required_attributes = 10;
   */
  requiredAttributes: string[];

  /**
   * Restricts the response to vehicles with at least one of the specified
   * attributes in each `VehicleAttributeList`. Within each list, a vehicle must
   * match at least one of the attributes. This field is an inclusive
   * disjunction/OR operation in each `VehicleAttributeList` and a
   * conjunction/AND operation across the collection of `VehicleAttributeList`.
   * Each repeated string should be of the format
   * "key1:value1|key2:value2|key3:value3".
   *
   * @generated from field: repeated string required_one_of_attributes = 13;
   */
  requiredOneOfAttributes: string[];

  /**
   * `required_one_of_attribute_sets` provides additional functionality.
   * 
   * Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`
   * uses a message which allows a list of lists, allowing expressions such as
   * this one:
   * 
   * ```
   * (required_attributes[0] AND required_attributes[1] AND ...)
   * AND
   * (
   *   (required_one_of_attribute_sets[0][0] AND
   *   required_one_of_attribute_sets[0][1] AND
   *   ...)
   *   OR
   *   (required_one_of_attribute_sets[1][0] AND
   *   required_one_of_attribute_sets[1][1] AND
   *   ...)
   * )
   * ```
   * 
   * Restricts the response to vehicles that match all the attributes in a
   * `VehicleAttributeList`. Within each list, a vehicle must match all of the
   * attributes. This field is a conjunction/AND operation in each
   * `VehicleAttributeList` and inclusive disjunction/OR operation across the
   * collection of `VehicleAttributeList`. Each repeated string should be of the
   * format "key1:value1|key2:value2|key3:value3".
   *
   * @generated from field: repeated string required_one_of_attribute_sets = 15;
   */
  requiredOneOfAttributeSets: string[];

  /**
   * Restricts the response to vehicles that have this vehicle state.
   *
   * @generated from field: demand.VehicleState vehicle_state = 11;
   */
  vehicleState: VehicleState;

  /**
   * Only return the vehicles with current trip(s).
   *
   * @generated from field: bool on_trip_only = 14;
   */
  onTripOnly: boolean;

  /**
   * Optional. A filter query to apply when listing vehicles. See
   * http://aip.dev/160 for examples of the filter syntax.
   * 
   * This field is designed to replace the `required_attributes`,
   * `required_one_of_attributes`, and `required_one_of_attributes_sets` fields.
   * If a non-empty value is specified here, the following fields must be empty:
   * `required_attributes`, `required_one_of_attributes`, and
   * `required_one_of_attributes_sets`.
   * 
   * This filter functions as an AND clause with other constraints,
   * such as `vehicle_state` or `on_trip_only`.
   * 
   * Note that the only queries supported are on vehicle attributes (for
   * example, `attributes.<key> = <value>` or `attributes.<key1> = <value1> AND
   * attributes.<key2> = <value2>`). The maximum number of restrictions allowed
   * in a filter query is 50.
   * 
   * Also, all attributes are stored as strings, so the only supported
   * comparisons against attributes are string comparisons. In order to compare
   * against number or boolean values, the values must be explicitly quoted to
   * be treated as strings (for example, `attributes.<key> = "10"` or
   * `attributes.<key> = "true"`).
   *
   * @generated from field: string filter = 16;
   */
  filter: string;

  /**
   * Optional. A filter that limits the vehicles returned to those whose last
   * known location was in the rectangular area defined by the viewport.
   *
   * @generated from field: google.geo.type.Viewport viewport = 17;
   */
  viewport?: Viewport;
};

/**
 * Describes the message demand.ListVehiclesRequest.
 * Use `create(ListVehiclesRequestSchema)` to create a new message.
 */
export const ListVehiclesRequestSchema: GenMessage<ListVehiclesRequest> = /*@__PURE__*/
  messageDesc(file_demand_v1_vehicle_api, 7);

/**
 * `ListVehicles` response message.
 *
 * @generated from message demand.ListVehiclesResponse
 */
export type ListVehiclesResponse = Message<"demand.ListVehiclesResponse"> & {
  /**
   * Vehicles matching the criteria in the request.
   * The maximum number of vehicles returned is determined by the `page_size`
   * field in the request.
   *
   * @generated from field: repeated demand.Vehicle vehicles = 1;
   */
  vehicles: Vehicle[];

  /**
   * Token to retrieve the next page of vehicles, or empty if there are no
   * more vehicles that meet the request criteria.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * Required. Total number of vehicles matching the request criteria across all
   * pages.
   *
   * @generated from field: int64 total_size = 3;
   */
  totalSize: bigint;
};

/**
 * Describes the message demand.ListVehiclesResponse.
 * Use `create(ListVehiclesResponseSchema)` to create a new message.
 */
export const ListVehiclesResponseSchema: GenMessage<ListVehiclesResponse> = /*@__PURE__*/
  messageDesc(file_demand_v1_vehicle_api, 8);

/**
 * Describes intermediate points along a route for a `VehicleMatch` in a
 * `SearchVehiclesResponse`. This concept is represented as a `TripWaypoint` in
 * all other endpoints.
 *
 * @generated from message demand.Waypoint
 */
export type Waypoint = Message<"demand.Waypoint"> & {
  /**
   * The location of this waypoint.
   *
   * @generated from field: google.type.LatLng lat_lng = 1;
   */
  latLng?: LatLng;

  /**
   * The estimated time that the vehicle will arrive at this waypoint.
   *
   * @generated from field: google.protobuf.Timestamp eta = 2;
   */
  eta?: Timestamp;
};

/**
 * Describes the message demand.Waypoint.
 * Use `create(WaypointSchema)` to create a new message.
 */
export const WaypointSchema: GenMessage<Waypoint> = /*@__PURE__*/
  messageDesc(file_demand_v1_vehicle_api, 9);

/**
 * Contains the vehicle and related estimates for a vehicle that match the
 * points of active trips for the vehicle `SearchVehiclesRequest`.
 *
 * @generated from message demand.VehicleMatch
 */
export type VehicleMatch = Message<"demand.VehicleMatch"> & {
  /**
   * Required. A vehicle that matches the request.
   *
   * @generated from field: demand.Vehicle vehicle = 1;
   */
  vehicle?: Vehicle;

  /**
   * The vehicle's driving ETA to the pickup point specified in the
   * request. An empty value indicates a failure in calculating ETA for the
   * vehicle.  If `SearchVehiclesRequest.include_back_to_back` was `true` and
   * this vehicle has an active trip, `vehicle_pickup_eta` includes the time
   * required to complete the current active trip.
   *
   * @generated from field: google.protobuf.Timestamp vehicle_pickup_eta = 2;
   */
  vehiclePickupEta?: Timestamp;

  /**
   * The distance from the Vehicle's current location to the pickup point
   * specified in the request, including any intermediate pickup or dropoff
   * points for existing trips. This distance comprises the calculated driving
   * (route) distance, plus the straight line distance between the navigation
   * end point and the requested pickup point. (The distance between the
   * navigation end point and the requested pickup point is typically small.) An
   * empty value indicates an error in calculating the distance.
   *
   * @generated from field: google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;
   */
  vehiclePickupDistanceMeters?: number;

  /**
   * Required. The straight-line distance between the vehicle and the pickup
   * point specified in the request.
   *
   * @generated from field: google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11;
   */
  vehiclePickupStraightLineDistanceMeters?: number;

  /**
   * The complete vehicle's driving ETA to the drop off point specified in the
   * request. The ETA includes stopping at any waypoints before the
   * `dropoff_point` specified in the request. The value will only be populated
   * when a drop off point is specified in the request. An empty value indicates
   * an error calculating the ETA.
   *
   * @generated from field: google.protobuf.Timestamp vehicle_dropoff_eta = 4;
   */
  vehicleDropoffEta?: Timestamp;

  /**
   * The vehicle's driving distance (in meters) from the pickup point
   * to the drop off point specified in the request. The distance is only
   * between the two points and does not include the vehicle location or any
   * other points that must be visited before the vehicle visits either the
   * pickup point or dropoff point. The value will only be populated when a
   * `dropoff_point` is specified in the request. An empty value indicates
   * a failure in calculating the distance from the pickup to
   * drop off point specified in the request.
   *
   * @generated from field: google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;
   */
  vehiclePickupToDropoffDistanceMeters?: number;

  /**
   * Required. The trip type of the request that was used to calculate the ETA
   * to the pickup point.
   *
   * @generated from field: demand.TripType trip_type = 6;
   */
  tripType: TripType;

  /**
   * The ordered list of waypoints used to calculate the ETA. The list
   * includes vehicle location, the pickup points of active
   * trips for the vehicle, and the pickup points provided in the
   * request. An empty list indicates a failure in calculating ETA for the
   * vehicle.
   *
   * @generated from field: repeated demand.Waypoint vehicle_trips_waypoints = 7;
   */
  vehicleTripsWaypoints: Waypoint[];

  /**
   * Type of the vehicle match.
   *
   * @generated from field: demand.VehicleMatch.VehicleMatchType vehicle_match_type = 8;
   */
  vehicleMatchType: VehicleMatch_VehicleMatchType;

  /**
   * The order requested for sorting vehicle matches.
   *
   * @generated from field: demand.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;
   */
  requestedOrderedBy: SearchVehiclesRequest_VehicleMatchOrder;

  /**
   * The actual order that was used for this vehicle. Normally this
   * will match the 'order_by' field from the request; however, in certain
   * circumstances such as an internal server error, a different method
   * may be used (such as `PICKUP_POINT_STRAIGHT_DISTANCE`).
   *
   * @generated from field: demand.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;
   */
  orderedBy: SearchVehiclesRequest_VehicleMatchOrder;
};

/**
 * Describes the message demand.VehicleMatch.
 * Use `create(VehicleMatchSchema)` to create a new message.
 */
export const VehicleMatchSchema: GenMessage<VehicleMatch> = /*@__PURE__*/
  messageDesc(file_demand_v1_vehicle_api, 10);

/**
 * Type of vehicle match.
 *
 * @generated from enum demand.VehicleMatch.VehicleMatchType
 */
export enum VehicleMatch_VehicleMatchType {
  /**
   * Unknown vehicle match type
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * The vehicle currently has no trip assigned to it and can proceed to the
   * pickup point.
   *
   * @generated from enum value: EXCLUSIVE = 1;
   */
  EXCLUSIVE = 1,

  /**
   * The vehicle is currently assigned to a trip, but can proceed to the
   * pickup point after completing the in-progress trip.  ETA and distance
   * calculations take the existing trip into account.
   *
   * @generated from enum value: BACK_TO_BACK = 2;
   */
  BACK_TO_BACK = 2,

  /**
   * The vehicle has sufficient capacity for a shared ride.
   *
   * @generated from enum value: CARPOOL = 3;
   */
  CARPOOL = 3,

  /**
   * The vehicle will finish its current, active trip before proceeding to the
   * pickup point.  ETA and distance calculations take the existing trip into
   * account.
   *
   * @generated from enum value: CARPOOL_BACK_TO_BACK = 4;
   */
  CARPOOL_BACK_TO_BACK = 4,
}

/**
 * Describes the enum demand.VehicleMatch.VehicleMatchType.
 */
export const VehicleMatch_VehicleMatchTypeSchema: GenEnum<VehicleMatch_VehicleMatchType> = /*@__PURE__*/
  enumDesc(file_demand_v1_vehicle_api, 10, 0);

/**
 * A list-of-lists datatype for vehicle attributes.
 *
 * @generated from message demand.VehicleAttributeList
 */
export type VehicleAttributeList = Message<"demand.VehicleAttributeList"> & {
  /**
   * A list of attributes in this collection.
   *
   * @generated from field: repeated demand.VehicleAttribute attributes = 1;
   */
  attributes: VehicleAttribute[];
};

/**
 * Describes the message demand.VehicleAttributeList.
 * Use `create(VehicleAttributeListSchema)` to create a new message.
 */
export const VehicleAttributeListSchema: GenMessage<VehicleAttributeList> = /*@__PURE__*/
  messageDesc(file_demand_v1_vehicle_api, 11);

/**
 * Vehicle management service.
 *
 * @generated from service demand.VehicleService
 */
export const VehicleService: GenService<{
  /**
   * Instantiates a new vehicle associated with an on-demand rideshare or
   * deliveries provider. Each `Vehicle` must have a unique vehicle ID.
   * 
   * The following `Vehicle` fields are required when creating a `Vehicle`:
   * 
   * * `vehicleState`
   * * `supportedTripTypes`
   * * `maximumCapacity`
   * * `vehicleType`
   * 
   * The following `Vehicle` fields are ignored when creating a `Vehicle`:
   * 
   * * `name`
   * * `currentTrips`
   * * `availableCapacity`
   * * `current_route_segment`
   * * `current_route_segment_end_point`
   * * `current_route_segment_version`
   * * `current_route_segment_traffic`
   * * `route`
   * * `waypoints`
   * * `waypoints_version`
   * * `remaining_distance_meters`
   * * `remaining_time_seconds`
   * * `eta_to_next_waypoint`
   * * `navigation_status`
   * 
   * All other fields are optional and used if provided.
   *
   * @generated from rpc demand.VehicleService.CreateVehicle
   */
  createVehicle: {
    methodKind: "unary";
    input: typeof CreateVehicleRequestSchema;
    output: typeof VehicleSchema;
  },
  /**
   * Returns a vehicle from the Fleet Engine.
   *
   * @generated from rpc demand.VehicleService.GetVehicle
   */
  getVehicle: {
    methodKind: "unary";
    input: typeof GetVehicleRequestSchema;
    output: typeof VehicleSchema;
  },
  /**
   * Writes updated vehicle data to the Fleet Engine.
   * 
   * When updating a `Vehicle`, the following fields cannot be updated since
   * they are managed by the server:
   * 
   * * `currentTrips`
   * * `availableCapacity`
   * * `current_route_segment_version`
   * * `waypoints_version`
   * 
   * The vehicle `name` also cannot be updated.
   * 
   * If the `attributes` field is updated, **all** the vehicle's attributes are
   * replaced with the attributes provided in the request. If you want to update
   * only some attributes, see the `UpdateVehicleAttributes` method. Likewise,
   * the `waypoints` field can be updated, but must contain all the waypoints
   * currently on the vehicle, and no other waypoints.
   *
   * @generated from rpc demand.VehicleService.UpdateVehicle
   */
  updateVehicle: {
    methodKind: "unary";
    input: typeof UpdateVehicleRequestSchema;
    output: typeof VehicleSchema;
  },
  /**
   * Partially updates a vehicle's attributes.
   * Only the attributes mentioned in the request will be updated, other
   * attributes will NOT be altered. Note: this is different in `UpdateVehicle`,
   * where the whole `attributes` field will be replaced by the one in
   * `UpdateVehicleRequest`, attributes not in the request would be removed.
   *
   * @generated from rpc demand.VehicleService.UpdateVehicleAttributes
   */
  updateVehicleAttributes: {
    methodKind: "unary";
    input: typeof UpdateVehicleAttributesRequestSchema;
    output: typeof UpdateVehicleAttributesResponseSchema;
  },
  /**
   * Returns a paginated list of vehicles associated with
   * a provider that match the request options.
   *
   * @generated from rpc demand.VehicleService.ListVehicles
   */
  listVehicles: {
    methodKind: "unary";
    input: typeof ListVehiclesRequestSchema;
    output: typeof ListVehiclesResponseSchema;
  },
  /**
   * Returns a list of vehicles that match the request options.
   *
   * @generated from rpc demand.VehicleService.SearchVehicles
   */
  searchVehicles: {
    methodKind: "unary";
    input: typeof SearchVehiclesRequestSchema;
    output: typeof SearchVehiclesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_demand_v1_vehicle_api, 0);

